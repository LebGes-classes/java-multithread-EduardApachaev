package org.MT;
import org.telegram.telegrambots.bots.TelegramLongPollingBot;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;
import java.util.concurrent.*;

public class PasswordBot extends TelegramLongPollingBot {
    private final ExecutorService executor = Executors.newCachedThreadPool();

    @Override
    public String getBotUsername() {
        return "PasswordGeneratorBot";
    }

    @Override
    public String getBotToken() {
        return "8177691684:AAGZ66Jz3pyySrvKbrB-vCleoy28LxU8OhA"; // –ü–æ–ª—É—á–∏—Ç–µ —É @BotFather
    }

    @Override
    public void onUpdateReceived(Update update) {
        if (!update.hasMessage() || !update.getMessage().hasText()) return;

        String messageText = update.getMessage().getText();
        long chatId = update.getMessage().getChatId();

        switch (messageText) {
            case "/start":
                sendMessage(chatId, "üîê –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–∞—Ä–æ–ª—è–º–∏.\n" +
                        "‚Ä¢ /generate ‚Äì –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–∞–¥–µ–∂–Ω—ã–π –ø–∞—Ä–æ–ª—å\n" +
                        "‚Ä¢ /check ‚Äì –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–∞—Ä–æ–ª—å –Ω–∞ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å");
                break;

            case "/generate":
                // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ, —á—Ç–æ–±—ã –±–æ—Ç –Ω–µ –∑–∞–≤–∏—Å
                executor.execute(() -> {
                    String password = PasswordGenerator.generatePassword(12, true);
                    sendMessage(chatId, "üîë –í–∞—à –ø–∞—Ä–æ–ª—å: " + password + "\n" +
                            "–ù–∞–¥–µ–∂–Ω–æ—Å—Ç—å: " + (PasswordValidator.isPasswordStrong(password, true) ? "–û—Ç–ª–∏—á–Ω—ã–π" : "–°–ª–∞–±—ã–π"));
                });
                break;

            case "/check":
                sendMessage(chatId, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏:");
                break;

            default:
                // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è (–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª —Ç–µ–∫—Å—Ç)
                if (messageText.length() > 0) {
                    executor.execute(() -> {
                        boolean isStrong = PasswordValidator.isPasswordStrong(messageText, true);
                        sendMessage(chatId, "–ü–∞—Ä–æ–ª—å: " + messageText + "\n" +
                                "–ù–∞–¥–µ–∂–Ω–æ—Å—Ç—å: " + (isStrong ? "–û—Ç–ª–∏—á–Ω—ã–π" : "–°–ª–∞–±—ã–π"));
                    });
                }
        }
    }

    private void sendMessage(long chatId, String text) {
        SendMessage message = new SendMessage();
        message.setChatId(chatId);
        message.setText(text);
        try {
            execute(message);
        } catch (TelegramApiException e) {
            e.printStackTrace();
        }
    }
}
